// Generated by CoffeeScript 1.10.0
(function() {
  var async, start;

  async = require('async');

  start = function(ready) {
    var config, conn, connectToDatabase, createDirectories, getLogger, logger, schemas;
    config = require('./server-config.json');
    getLogger = function(name, level) {
      var log4js, logger;
      log4js = require('log4js');
      log4js.configure({
        appenders: [
          {
            type: 'console'
          }, {
            type: 'file',
            filename: 'logs/' + config.logger.filename,
            category: name
          }
        ]
      });
      logger = log4js.getLogger(name);
      logger.setLevel(level);
      return logger;
    };
    logger = getLogger('market-web', config.logger.level);
    conn = {};
    schemas = {};
    createDirectories = function(callback) {
      var createDirectory, fs, required_directories;
      fs = require('fs-extra');
      required_directories = ['user-content/item-images'];
      createDirectory = function(directory, callback) {
        return fs.ensureDir(directory, function(err) {
          if (err != null) {
            logger.error(err);
          }
          return callback();
        });
      };
      return async.each(required_directories, createDirectory, callback);
    };
    connectToDatabase = function(callback) {
      var Schema, database_url, mongoose, setSchemas;
      mongoose = require('mongoose');
      Schema = mongoose.Schema;
      conn = mongoose.connection;
      setSchemas = function() {
        schemas.items = new Schema({
          id: String,
          owner: String,
          name: String,
          price: Number,
          quantity: Number,
          instructions: Number,
          image: String,
          forSale: Boolean,
          quicklink: String
        }, {
          collection: 'items'
        });
        schemas.transactions = new Schema({
          from: String,
          to: String,
          date: Date,
          amount: Number,
          memo: String,
          generated: Boolean
        }, {
          collection: 'transactions'
        });
        schemas.users = new Schema({
          id: String,
          username: String,
          username_lower: String,
          bankid: String,
          password: String,
          balance: Number,
          tagline: String,
          trusted: Boolean,
          taxExempt: Boolean,
          collection: 'users'
        });
        schemas.quicklinks = new Schema({
          link: String,
          item: String,
          payment: {
            to: String,
            amount: Number,
            memo: String
          },
          collection: 'quicklinks'
        });
        return schemas.receipts = new Schema({
          id: String,
          proof: String,
          buyer: String,
          seller: String,
          recipient: String,
          date: Date,
          item: {
            name: String,
            quantity: Number,
            description: String,
            instructions: String
          }
        });
      };
      database_url = 'mongodb://' + config.mongodb.host + ':' + config.mongodb.port + '/' + config.mongodb.database;
      mongoose.connect(database_url);
      conn.once('error', function(err) {
        logger.error(err);
        throw err;
      });
      return conn.once('open', callback);
    };
    return async.series([createDirectories]);
  };

  module.exports.start = start;

  start();

}).call(this);
